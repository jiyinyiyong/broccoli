// Generated by CoffeeScript 1.4.0
var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

define(function(require, exports) {
  var backend, card, index, match, popup, render_card, search, table;
  backend = require("./backend");
  popup = require("./popup");
  search = $("#search").focus();
  table = $("#table");
  index = {
    data: [],
    update: function() {
      return backend.get_index(function(json) {
        index.data = json;
        return exports.search([]);
      });
    }
  };
  index.update();
  card = function(data) {
    return $(lilyturf.dom(function() {
      return this.div({
        "class": "card"
      }, this.div({
        "class": "tags horizontal"
      }), this.div({
        "class": "title button"
      }, this.text(data.title)));
    }));
  };
  render_card = function(data) {
    var elem;
    elem = card(data);
    table.append(elem);
    data.tags.forEach(function(key) {
      var a_tag;
      a_tag = $(lilyturf.dom(function() {
        return this.div({
          "class": "tag button"
        }, this.text(key));
      }));
      elem.find(".tags").append(a_tag);
      return a_tag.click(function() {
        return exports.search([key]);
      });
    });
    return elem.find(".title").click(function() {
      return popup.reader(data);
    });
  };
  match = function(keys, have) {
    var _ref;
    if (keys[0] == null) {
      return true;
    } else {
      while (keys[0] != null) {
        if (_ref = keys[0], __indexOf.call(have, _ref) >= 0) {
          return true;
        }
        keys = keys.slice(1);
      }
      return false;
    }
  };
  exports.search = function(tags) {
    var result;
    result = [];
    index.data.forEach(function(item) {
      if (match(tags, item.tags)) {
        return result.push(item);
      }
    });
    table.empty();
    return result.forEach(render_card);
  };
  exports.update = function() {
    return index.update();
  };
  return exports;
});
